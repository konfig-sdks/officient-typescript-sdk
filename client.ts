/*
Officient API

Officient offers an intuitive HRIS which helps manage all personnel administration through our HR platform & personalized employee self-services. Manage payroll, company assets, contracts, days off, fleet, performance reviews and all employee data in one HR system. HR deserves great software and we're here to provide it.

We support our customers in transforming HR towards paperless administration and automating tedious workforce management tasks in the process. Our goal? Transform HR from an administrative, processing role, to a controlling role which fuels HR strategy across the organization.

The version of the OpenAPI document: 1.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  AccountApi,
  AssetApi,
  AuthenticationApi,
  BudgetApi,
  CalendarRequestApi,
  CalendarStateApi,
  ComponentApi,
  ContractApi,
  CostCenterApi,
  CostUnitApi,
  CustomEventTypeApi,
  CustomFieldApi,
  DepartmentApi,
  DocumentApi,
  ExpenseApi,
  FunctionApi,
  InvitationApi,
  PersonApi,
  PrioritySchemeApi,
  TeamApi,
  VehicleApi,
  WebhookApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { OfficientCustom } from "./client-custom";

export class Officient extends OfficientCustom {
  readonly account: AccountApi;
  readonly asset: AssetApi;
  readonly authentication: AuthenticationApi;
  readonly budget: BudgetApi;
  readonly calendarRequest: CalendarRequestApi;
  readonly calendarState: CalendarStateApi;
  readonly component: ComponentApi;
  readonly contract: ContractApi;
  readonly costCenter: CostCenterApi;
  readonly costUnit: CostUnitApi;
  readonly customEventType: CustomEventTypeApi;
  readonly customField: CustomFieldApi;
  readonly department: DepartmentApi;
  readonly document: DocumentApi;
  readonly expense: ExpenseApi;
  readonly function: FunctionApi;
  readonly invitation: InvitationApi;
  readonly person: PersonApi;
  readonly priorityScheme: PrioritySchemeApi;
  readonly team: TeamApi;
  readonly vehicle: VehicleApi;
  readonly webhook: WebhookApi;

  constructor(configurationParameters: ConfigurationParameters) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.account = new AccountApi(configuration);
    this.asset = new AssetApi(configuration);
    this.authentication = new AuthenticationApi(configuration);
    this.budget = new BudgetApi(configuration);
    this.calendarRequest = new CalendarRequestApi(configuration);
    this.calendarState = new CalendarStateApi(configuration);
    this.component = new ComponentApi(configuration);
    this.contract = new ContractApi(configuration);
    this.costCenter = new CostCenterApi(configuration);
    this.costUnit = new CostUnitApi(configuration);
    this.customEventType = new CustomEventTypeApi(configuration);
    this.customField = new CustomFieldApi(configuration);
    this.department = new DepartmentApi(configuration);
    this.document = new DocumentApi(configuration);
    this.expense = new ExpenseApi(configuration);
    this.function = new FunctionApi(configuration);
    this.invitation = new InvitationApi(configuration);
    this.person = new PersonApi(configuration);
    this.priorityScheme = new PrioritySchemeApi(configuration);
    this.team = new TeamApi(configuration);
    this.vehicle = new VehicleApi(configuration);
    this.webhook = new WebhookApi(configuration);
  }

}
