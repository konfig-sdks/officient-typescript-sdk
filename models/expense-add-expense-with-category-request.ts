/*
Officient API

Officient offers an intuitive HRIS which helps manage all personnel administration through our HR platform & personalized employee self-services. Manage payroll, company assets, contracts, days off, fleet, performance reviews and all employee data in one HR system. HR deserves great software and we're here to provide it.

We support our customers in transforming HR towards paperless administration and automating tedious workforce management tasks in the process. Our goal? Transform HR from an administrative, processing role, to a controlling role which fuels HR strategy across the organization.

The version of the OpenAPI document: 1.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"


/**
 * 
 * @export
 * @interface ExpenseAddExpenseWithCategoryRequest
 */
export interface ExpenseAddExpenseWithCategoryRequest {
    /**
     * This is the title for the expense
     * @type {string}
     * @memberof ExpenseAddExpenseWithCategoryRequest
     */
    'description': string;
    /**
     * 
     * @type {number}
     * @memberof ExpenseAddExpenseWithCategoryRequest
     */
    'employee_id': number;
    /**
     * For some integrations this is required not to be 0 which is the default category id
     * @type {number}
     * @memberof ExpenseAddExpenseWithCategoryRequest
     */
    'category_id': number;
    /**
     * this is the price of the expense, this is only required when using a total amount category
     * @type {number}
     * @memberof ExpenseAddExpenseWithCategoryRequest
     */
    'amount'?: number;
    /**
     * 
     * @type {string}
     * @memberof ExpenseAddExpenseWithCategoryRequest
     */
    'extra_information'?: string;
    /**
     * this is the day the expense has incurred on and is required when it is a total amount category
     * @type {string}
     * @memberof ExpenseAddExpenseWithCategoryRequest
     */
    'date'?: string;
    /**
     * this is required when you want to add an expense with a total amount category
     * @type {string}
     * @memberof ExpenseAddExpenseWithCategoryRequest
     */
    'filename'?: string;
    /**
     * this is required when you want to add an expense with a total amount category
     * @type {string}
     * @memberof ExpenseAddExpenseWithCategoryRequest
     */
    'file_base64'?: string;
    /**
     * this is required when you want to add an expense with a kilometer or day allowance expense category, multiple dates are also possible (ex: [\"24/05/2023\", \"26/05/2023\"])
     * @type {Array<string>}
     * @memberof ExpenseAddExpenseWithCategoryRequest
     */
    'dates'?: Array<string>;
    /**
     * this is required when you want to update to a killometer allowance expense category. This is equal to the total amount of kilometers that has been done
     * @type {number}
     * @memberof ExpenseAddExpenseWithCategoryRequest
     */
    'distance'?: number;
    /**
     * this is the value if it\'s an outward or a round journey when using kilometer allowances, this defaults to single
     * @type {string}
     * @memberof ExpenseAddExpenseWithCategoryRequest
     */
    'ride'?: ExpenseAddExpenseWithCategoryRequestRideEnum;
}

type ExpenseAddExpenseWithCategoryRequestRideEnum = 'single' | 'double'


